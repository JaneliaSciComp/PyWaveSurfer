Users: This files contains information for the Wavesurfer
developer(s).  You can safely ignore it.



To bump version
---------------

0. pip install --user bumpversion

   This installs the bumpversion command-line tool for the current user.

1. Run: bumpversion patch (or 'minor' or 'major' following:
   major.minor.patch)

   This modifies the setup.py file in the root of the repo.  It also
   changes .bumpversion.cfg to reflect the new version.  *** It then
   does a git commit of these changes, with a comment
   like "Bump version: 0.0.2 -> 0.0.3".  (So you should probbaly be on
   the release branch when you do this.)

2. Add a paragraph to the README about the new release.

3. Commit to the release branch, then switch over to master, and merge
   in the release branch.

4. Run: python3 setup.py sdist

   Runs the setup.py script that got updated in the "bumpversion" step
   above.  This creates/updates the dist folder and the
   pywavesurfer.egg-info folders, which contain a packaged version of
   the pywavesurfer module, ready for uploading to PyPI, and some
   metadata pertaining to it.  

5. Run: twine upload dist\pywaveserfer{version}

   This uploads the module to PyPI.



To run automated tests
----------------------

1. Change directory to pywavesurfer

2. Run: pytest --pep8

3. To see coverage run: pytest --pep8 --cov=pywavesurfer --cov-report html



pyWavesurfer coding/development conventions
-----------------------------------------

As much as possible please adhere to PEP8.
https://www.python.org/dev/peps/pep-0008/.

Two exception are made:

1. Line length is capped at 120

2. The loading method name remains camelCase for consistency of the API


